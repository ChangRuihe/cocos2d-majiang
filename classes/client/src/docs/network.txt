1. 网络 c++调用lua
	function connectedCallBack(socketfd,bConnect)   --bConnect 1成功 0失败
		print("socket " ..socketfd .. " conenct " .. bConnect)
	end
	function receiveDataCallBack(socketfd,wMainCmdID,wSubCmdID,pDataBuffer,wDataSize)
		print("socket " .. socketfd .. "receive message")
	end
	function deconnectedCallBack(socketfd)
		print("socket " .. socketfd .. "closed")
	end
	function fdDestroyedCallBack(socketfd)
		print("socket " ..socketfd .. " destoryed")
	end
	function logCallBack(typecode,errmsg)
		print("socket module err:" .. typecode .. " msg:" .. errmsg)
	end
	function socketupdate()
		CSocketManager:GetInstance():SocketUpdate()
	end

2. 使用实例：
    --网络初始化
    local socketlib = CSocketManager:GetInstance()
    socketlib:setCallBack("connectedCallBack","receiveDataCallBack","deconnectedCallBack","fdDestroyedCallBack","logCallBack")
    
    --ui线程刷socket数据
    local scheduler = cc.Director:getInstance():getScheduler()
    scheduler:scheduleScriptFunc(function()
        socketupdate()
    end, 0.01, false)
    --使用实例
    local serverip, port = "127.0.0.1",12123
    socketlib:Connect(serverip, serverip:len(), port)
    --socketlib:Disconnect(fd)
    --socketlib:IsConnected(fd)
    --SendData(socketFd, unsigned short wMainCmdID, unsigned short wSubCmdID, char * pData, unsigned short wDataSize);