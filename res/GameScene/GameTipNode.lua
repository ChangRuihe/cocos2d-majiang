--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create imgBG
local imgBG = cc.Sprite:create("GameScene/TimeBack.png")
imgBG:setName("imgBG")
imgBG:setTag(121)
imgBG:setCascadeColorEnabled(true)
imgBG:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(imgBG)
layout:setSize({width = 130.0000, height = 130.0000})
layout:setLeftMargin(-65.0000)
layout:setRightMargin(-65.0000)
layout:setTopMargin(-65.0000)
layout:setBottomMargin(-65.0000)
imgBG:setBlendFunc({src = 1, dst = 771})
Node:addChild(imgBG)

--Create imgDir
local imgDir = cc.Sprite:create("GameScene/TimePoint0.png")
imgDir:setName("imgDir")
imgDir:setTag(122)
imgDir:setCascadeColorEnabled(true)
imgDir:setCascadeOpacityEnabled(true)
imgDir:setRotationSkewY(-0.0029)
layout = ccui.LayoutComponent:bindLayoutComponent(imgDir)
layout:setSize({width = 130.0000, height = 130.0000})
layout:setLeftMargin(-65.0000)
layout:setRightMargin(-65.0000)
layout:setTopMargin(-65.0000)
layout:setBottomMargin(-65.0000)
imgDir:setBlendFunc({src = 1, dst = 771})
Node:addChild(imgDir)

--Create lblTime
local lblTime = ccui.Text:create()
lblTime:ignoreContentAdaptWithSize(true)
lblTime:setTextAreaSize({width = 0, height = 0})
lblTime:setFontName("font/DFYuanW7-GB2312.ttf")
lblTime:setFontSize(36)
lblTime:setString([[00]])
lblTime:enableOutline({r = 0, g = 0, b = 0, a = 255}, 1)
lblTime:setLayoutComponentEnabled(true)
lblTime:setName("lblTime")
lblTime:setTag(123)
lblTime:setCascadeColorEnabled(true)
lblTime:setCascadeOpacityEnabled(true)
lblTime:setAnchorPoint(0.0000, 0.5000)
lblTime:setPosition(-21.0000, 0.0001)
lblTime:setTextColor({r = 0, g = 255, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(lblTime)
layout:setSize({width = 39.0000, height = 43.0000})
layout:setLeftMargin(-21.0000)
layout:setRightMargin(-18.0000)
layout:setTopMargin(-21.5001)
layout:setBottomMargin(-21.4999)
Node:addChild(lblTime)

--Create lblDesc
local lblDesc = ccui.Text:create()
lblDesc:ignoreContentAdaptWithSize(true)
lblDesc:setTextAreaSize({width = 0, height = 0})
lblDesc:setFontName("font/DFYuanW7-GB2312.ttf")
lblDesc:setFontSize(30)
lblDesc:setString([[剩余%d张，第%d/%d局]])
lblDesc:setLayoutComponentEnabled(true)
lblDesc:setName("lblDesc")
lblDesc:setTag(139)
lblDesc:setCascadeColorEnabled(true)
lblDesc:setCascadeOpacityEnabled(true)
lblDesc:setPosition(-0.1227, -83.1489)
lblDesc:setTextColor({r = 88, g = 234, b = 223})
layout = ccui.LayoutComponent:bindLayoutComponent(lblDesc)
layout:setSize({width = 287.0000, height = 34.0000})
layout:setLeftMargin(-143.6227)
layout:setRightMargin(-143.3773)
layout:setTopMargin(66.1489)
layout:setBottomMargin(-100.1489)
Node:addChild(lblDesc)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

